openapi: 3.1.0
info:
  title: k-v.io key-value store API definition
  description: A REST-based key-value store built with Golang layered on etcd
  version: 0.0.2
servers:
- url: /
paths:
  /v0/key/{key}:
    get:
      summary: Retrieve a key's value
      description: Retrieve a key's value
      responses:
        "200":
          $ref: '#/components/responses/OK'
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "503":
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Set (or create) a key's value
      description: Set (or create) a key's value
      responses:
        "204":
          $ref: '#/components/responses/NoContent'
        "400":
          $ref: '#/components/responses/BadRequest'
        "503":
          $ref: '#/components/responses/ServiceUnavailable'
    delete:
      summary: Delete a key and value
      description: Delete a key and value
      responses:
        "204":
          $ref: '#/components/responses/NoContent'
        "400":
          $ref: '#/components/responses/BadRequest'
        "503":
          $ref: '#/components/responses/ServiceUnavailable'
    parameters:
    - $ref: '#/components/parameters/keyParam'
components:
  schemas:
    key:
      maxLength: 1023
      minLength: 1
      description: The key used to lookup the value
      example: Microsoft_Windows_Version
    value:
      maxLength: 1023
      minLength: 0
      description: The value associated with the key
      example: Windows 11 Pro 22H2 OS build 22598.1
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            properties:
              message:
                description: The key's value
          example:
            value: Windows 11 Pro 22H2 OS build 22598.1
    NoContent:
      description: No Content
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            properties:
              message:
                description: A descriptive error message
          example:
            message: No value associated with key; the key has been deleteed or hasn't
              been set yet
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            properties:
              message:
                description: A descriptive error message
          example:
            message: Key exceeds 1023 characters; use a shorter key
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            properties:
              message:
                description: A descriptive error message
          example:
            message: Could not communicate with the etcd cluster
  parameters:
    keyParam:
      name: key
      in: path
      required: true
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/key'
