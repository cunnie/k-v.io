openapi: 3.1.0
info:
  title: k-v.io key-value store API definition
  version: 0.0.2
  description: A REST-based key-value store built with Golang layered on etcd
paths:
  "/v0/key/{key}":
    parameters:
    - "$ref": "#/components/parameters/keyParam"
    get:
      summary: Retrieve a key's value
      description: Retrieve a key's value
      responses:
        "200":
          "$ref": "#/components/responses/OK"
        "400":
          "$ref": "#/components/responses/BadRequest"
        "404":
          "$ref": "#/components/responses/NotFound"
        "503":
          "$ref": "#/components/responses/ServiceUnavailable"
    put:
      summary: Set (or create) a key's value
      description: Set (or create) a key's value
      responses:
        "204":
          "$ref": "#/components/responses/NoContent"
        "400":
          "$ref": "#/components/responses/BadRequest"
        "503":
          "$ref": "#/components/responses/ServiceUnavailable"
    delete:
      summary: Delete a key and value
      description: Delete a key and value
      responses:
        "204":
          "$ref": "#/components/responses/NoContent"
        "400":
          "$ref": "#/components/responses/BadRequest"
        "503":
          "$ref": "#/components/responses/ServiceUnavailable"
components:
  schemas:
    key:
      type: string
      minLength: 1
      maxLength: 1023
      description:
        The key used to lookup the value
      examples:
        sshPubkey:
          value: "OpenSSH public key"
        softwareVersion:
          value: "Microsoft Windows"
    value:
      type: string
      minLength: 0 # You can have a null value
      maxLength: 1023
      description:
        The value associated with the key
      examples:
        sshPubkey:
          value: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIWiAzxc4uovfaphO0QVC2w00YmzrogUpjAzvuqaQ9tD cunnie@nono.io"
        softwareVersion:
          value: "Windows 11 Pro 22H2 OS build 22598.1"
  parameters:
    keyParam:
      name: key
      in: path
      required: true
      schema:
        "$ref": "#/components/schemas/key"
  responses:
      OK:
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: value
                  description: The key's value
      NoContent:
        description: No Content
      NotFound:
        description: Not Found
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: A descriptive error message
            example:
              message: No value associated with key; the key has been deleteed or hasn't been set yet
      BadRequest:
        description: Bad Request
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: A descriptive error message
            example:
              message: Key exceeds 1023 characters; use a shorter key
      ServiceUnavailable:
        description: Service Unavailable
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: A descriptive error message
            example:
              message: Could not communicate with the etcd cluster
